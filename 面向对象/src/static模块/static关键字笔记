1、static修饰变量
    经过我们上面的描述，我们来考虑一下什么时候成员变量声明为实例变量呢？
    –【不同对象的这个属性具体值不同】什么意思呢？就是所有对象都有属性，但是这个属性呢它会随着对象的变化而变化
    什么时候成员变量声明为静态变量呢？
    –所有的对象都有这个属性，并且呢所有的对象的这个属性的值都是一样的，建议定义为静态变量，节省内存的开销

    需要注意的一点是静态变量在类加载的时候初始化，静态变量的内存在方法区内存开辟。访问它的时候不需要创建对象，
    可以直接使用“类名.
    静态变量名”的方式直接访问，需要注意的一点是，静态变量访问的时候也可以采用引用的方式访问，
    即使引用的是null它也不会空指针异常，因为访问静态的数据根本就不需要对象的存在
2、static修饰方法
    static修饰的方法叫做静态方法，静态方法的调用不需要对象的参与
    方法就是行为，而实例方法，需要对象的参与才能调用
    方法什么时候定义为静态的？

    当所有的对象执行这个方法的时候，而这个方法产生的行为或者影响都是一样的，那这个方法已经不是属于某一个对象
    ，可以将这个方法提升为类级别的方法 。
    也就是说这个方法已经不需要对象的参与了，我们就可以把这个方法定义为静态方法。（比如有一个方法是数学里面的
    求和方法，这个方法就不需要对象的参与，直接return a + b ;）
3、静态代码块
    使用static关键字来定义静态代码块
        格式为：
            static{
                java语句
                java语句
            }

    静态代码块是在类加载时执行，在main方法执行之前执行，并且只执行一次
    静态代码块一般是按照自上而下的顺序执行的

    静态代码块的作用就是可以记录类加载的时间
    这种语法机制就是sun公司给java程序员的一个特殊的时机，这个时机就叫做类加载时机。
        比如说需要在类加载的时候来记录类加载时机。（在那年哪月几时几分几秒，哪个类加载到JVM当中了）
4、实例代码块
    除了静态代码块还有一种语句块之外还有一种实例语句块
        实力语句块并没有在类加载的时候执行。
        可以发现实例语句块是在构造方法执行之前执行，冰倩每调用一次构造方法，实例语句块就是执行一次
        这也是SUN公司给java程序员提供的一个特殊时机，叫做对象构建时机

