多态在开发中的作用
    多态在开发中的作用?
        (******)非常重要
        多态在开发中的作用就是降低程序的耦合度,提高扩展力

    面向对象三大特征
        封装,继承,多态
        有了封装,有了这样一个整体的概念

解释方法覆盖遗留的问题
    方法覆盖只是针对“实例方法”，静态方法无法被覆盖
            一个类中的静态方法被子类继承之后重写,静态方法的调用和对象无关,使用多态机制,
            父类型引用指向子类型对象的时候,是不会调用到重写之后的方法的,这个引用是父类型
            变量的,不需要对象的参与,实际的也就是父类型的静态方法
            (方法覆盖和多态联合起来使用才有意义)
              如果不考虑多态,当当子类继承父类方法之后,不满足业务需求,也可以不考虑方法覆盖
              完全可以重新写一个方法来满足子类的需求呀


    私有方法无法被覆盖
        私有方法只能在本类中使用,所以就不能被覆盖,会出错

    方法的返回值类型
        (基本类型)会出现不兼容问题,不管什么基本类型类型的方法返回值,都必须保持相同
        (引用类型)
                当覆盖之后的方法返回值类型变小之后:可以
                当覆盖之后的方法返回值类型变大之后:不可以

